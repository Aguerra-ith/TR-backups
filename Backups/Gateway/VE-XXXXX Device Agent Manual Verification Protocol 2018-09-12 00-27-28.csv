id,title,section_id,template_id,type_id,priority_id,milestone_id,refs,created_by,created_on,updated_by,updated_on,estimate,estimate_forecast,suite_id,custom_automation_type,custom_description,custom_preconds,custom_steps,custom_expected,custom_steps_separated,custom_mission,custom_goals,section_hierarchy,section_parent_id,section_description
3476390,Post Resource utilization to Device Manager,66680,1,7,2,"","GATE-70,GATE-313,GATE-314,GATE-315",23,1519760526,23,1522772876,"","",4674,0,"As a Gateway Product I shall post resource utilization to the Gateway Manager so that individual system's resources can be trended and alerted when thresholds are reached.

# Metrics:
  * CPU usage
  * Memory usage
  * Drive space used
  * Processes running

# System level things
  * OS version
  * Number of cores
  * Total amount of memory
  * Total disk space
  * Network (ifconfig information)
  * MAC Address
  * Private IP
  * Last time the OS was patched timestamp
  * Packages installed
  * VM type (if applicable)
  * Hardware info

The configuration file should allow for customization of frequency of message types.

The agent should take in a YAML configuration file that will contain:

* IO credentials:
  * Client ID (string)
  * Client secret (string)

Type of product that it is. (string) example: AAT, PacsViewer, GatewayHost
FMS ID (int)

JSON format for message with Avro for message serialization. Use Base64 for large text (such as processes running and packages installed).","0. Clone the repo.
1. CD in to GA
2. run 'sudo bash bin/install.sh'
3. Modify the configuration file (`/config/agent_config.yml.template`) with the appropriate IO URL, credentials and topic so that it is working and posting to IO. Also add a frequency and a report type.
After all the changes are made save it and rename it to `agent_config.yml`

Report type can be: `status_report_basic`, `status_report_os`, `status_report_packages` and/or  `status_report_processes`

Config file example:


```
device_uid: 'localgw-pv'
io_credentials:
  url: 'https://io-devops.intouchstaging.com/client_api/v1/messages'
  client_id: 'abc123'
  client_secret: 'abc123'
  account: 'qa'
status_reports:
  - status_report_basic:
      # Frequency to send status reports in seconds.
      frequency: 3
      io_topic: 'eunity_status'
```","1. Run the agent 'ruby agent.rb -v' the verbose option is to output to the console.
2. Verify the timing of the reports, it should correspond to the time inputted in the frequency option of the yml config file.
3. Change the frequency and repeat steps 1 and 2.
4. Verify that the messages are reaching IO, by consuming from the topic configured in the yml config file.","Messages should be consumed from the configured topic with this codification:

JSON format for message with Avro for message serialization. Use Base64 for large text (such as processes running and packages installed).

Example of a consumed message:

```
{
    'success': true,
    'messages': 
        'T2JqAQQUYXZyby5jb2RlYwhudWxsFmF2cm8uc2NoZW1hmAN7InR5cGUiOiJy\nZWNvcmQiLCJuYW1lIjoicmVwb3J0X2Jhc2ljIiwiZmllbGRzIjpbeyJuYW1l\nIjoiY3B1X3VzYWdlIiwidHlwZSI6InN0cmluZyJ9LHsibmFtZSI6Im1lbW9y\neV91c2FnZSIsInR5cGUiOiJzdHJpbmcifSx7Im5hbWUiOiJtZW1vcnlfdG90\nYWwiLCJ0eXBlIjoic3RyaW5nIn0seyJuYW1lIjoicHJvY2Vzc2VzIiwidHlw\nZSI6InN0cmluZyJ9XX0AUDbiC3ehvf/1HcRc+JGYjAKYWBJJREF1TlFvPQoi\nTXpZMU1ERTVOVFExTmc9PQoiTkRFME1qSTRORGd3TUE9PQq4V1d5SlFTVVFp\nTENBaVZGUlpJaXdnSWxSSlRVVWlMQ0FpUTAxRUlpd2dJakVpTENBaVB5SXNJ\nQ0l3TURvdwpNRG93TVNJc0lDSnplWE4wWlcxa0lpd2dJaklpTENBaVB5SXNJ\nQ0l3TURvd01Eb3dNQ0lzSUNKcmRHaHkKWldGa1pDSXNJQ0l6SWl3Z0lqOGlM\nQ0FpTURBNk1EQTZNREFpTENBaWEzTnZablJwY25Ga0x6QWlMQ0FpCk5TSXNJ\nQ0kvSWl3Z0lqQXdPakF3T2pBd0lpd2dJbXQzYjNKclpYSXZNRG93U0NJc0lD\nSTJJaXdnSWo4aQpMQ0FpTURBNk1EQTZNREFpTENBaWEzZHZjbXRsY2k5MU16\nQTZNQ0lzSUNJM0lpd2dJajhpTENBaU1EQTYKTURBNk1EQWlMQ0FpY21OMVgz\nTmphR1ZrSWl3Z0lqZ2lMQ0FpUHlJc0lDSXdNRG93TURvd01DSXNJQ0p5Clkz\nVmZZbWdpTENBaU9TSXNJQ0kvSWl3Z0lqQXdPakF3T2pBd0lpd2dJbTFwWjNK\naGRHbHZiaTh3SWl3ZwpJakV3SWl3Z0lqOGlMQ0FpTURBNk1EQTZNREFpTENB\naWQyRjBZMmhrYjJjdk1DSXNJQ0l4TVNJc0lDSS8KSWl3Z0lqQXdPakF3T2pB\nd0lpd2dJbmRoZEdOb1pHOW5MekVpTENBaU1USWlMQ0FpUHlJc0lDSXdNRG93\nCk1Eb3dNQ0lzSUNKdGFXZHlZWFJwYjI0dk1TSXNJQ0l4TXlJc0lDSS9JaXdn\nSWpBd09qQXdPakF3SWl3ZwpJbXR6YjJaMGFYSnhaQzh4SWl3Z0lqRTFJaXdn\nSWo4aUxDQWlNREE2TURBNk1EQWlMQ0FpYTNkdmNtdGwKY2k4eE9qQklJaXdn\nSWpFMklpd2dJajhpTENBaU1EQTZNREE2TURBaUxDQWlhMlJsZG5SdGNHWnpJ\naXdnCklqRTNJaXdnSWo4aUxDQWlNREE2TURBNk1EQWlMQ0FpYm1WMGJuTWlM\nQ0FpTVRnaUxDQWlQeUlzSUNJdwpNRG93TURvd01DSXNJQ0p3WlhKbUlpd2dJ\nakU1SWl3Z0lqOGlMQ0FpTURBNk1EQTZNREFpTENBaWVHVnUKZDJGMFkyZ2lM\nQ0FpTWpBaUxDQWlQeUlzSUNJd01Eb3dNRG93TUNJc0lDSjRaVzVpZFhNaUxD\nQWlNakVpCkxDQWlQeUlzSUNJd01Eb3dNRG93TUNJc0lDSnJkMjl5YTJWeUx6\nQTZNU0lzSUNJeU1pSXNJQ0kvSWl3ZwpJakF3T2pBd09qQXdJaXdnSW10b2RX\nNW5kR0Z6YTJRaUxDQWlNak1pTENBaVB5SXNJQ0l3TURvd01Eb3cKTUNJc0lD\nSjNjbWwwWldKaFkyc2lMQ0FpTWpRaUxDQWlQeUlzSUNJd01Eb3dNRG93TUNJ\nc0lDSnJjMjFrCklpd2dJakkxSWl3Z0lqOGlMQ0FpTURBNk1EQTZNREFpTENB\naWEyaDFaMlZ3WVdkbFpDSXNJQ0l5TmlJcwpJQ0kvSWl3Z0lqQXdPakF3T2pB\nd0lpd2dJbU55ZVhCMGJ5SXNJQ0l5TnlJc0lDSS9JaXdnSWpBd09qQXcKT2pB\nd0lpd2dJbXRwYm5SbFozSnBkSGxrSWl3Z0lqSTRJaXdnSWo4aUxDQWlNREE2\nTURBNk1EQWlMQ0FpClltbHZjMlYwSWl3Z0lqSTVJaXdnSWo4aUxDQWlNREE2\nTURBNk1EQWlMQ0FpYTJKc2IyTnJaQ0lzSUNJegpNQ0lzSUNJL0lpd2dJakF3\nT2pBd09qQXdJaXdnSW1GMFlWOXpabVlpTENBaU16RWlMQ0FpUHlJc0lDSXcK\nTURvd01Eb3dNQ0lzSUNKdFpDSXNJQ0l6TWlJc0lDSS9JaXdnSWpBd09qQXdP\nakF3SWl3Z0ltUmxkbVp5ClpYRmZkM0VpTENBaU16TWlMQ0FpUHlJc0lDSXdN\nRG93TURvd01DSXNJQ0pyZDI5eWEyVnlMekU2TVNJcwpJQ0l6TkNJc0lDSS9J\naXdnSWpBd09qQXdPakF3SWl3Z0ltdDNiM0pyWlhJdmRUTXdPakVpTENBaU16\nWWkKTENBaVB5SXNJQ0l3TURvd01Eb3dNQ0lzSUNKcmMzZGhjR1F3SWl3Z0lq\nTTNJaXdnSWo4aUxDQWlNREE2Ck1EQTZNREFpTENBaWRtMXpkR0YwSWl3Z0lq\nTTRJaXdnSWo4aUxDQWlNREE2TURBNk1EQWlMQ0FpWm5OdQpiM1JwWm5sZmJX\nRnlheUlzSUNJek9TSXNJQ0kvSWl3Z0lqQXdPakF3T2pBd0lpd2dJbVZqY25s\nd2RHWnoKTFd0MGFISmxZU0lzSUNJMU5TSXNJQ0kvSWl3Z0lqQXdPakF3T2pB\nd0lpd2dJbXQwYUhKdmRHeGtJaXdnCklqVTJJaXdnSWo4aUxDQWlNREE2TURB\nNk1EQWlMQ0FpWW1sdmMyVjBJaXdnSWpVM0lpd2dJajhpTENBaQpNREE2TURB\nNk1EQWlMQ0FpWW1sdmMyVjBJaXdnSWpVNElpd2dJajhpTENBaU1EQTZNREE2\nTURBaUxDQWkKWW1sdmMyVjBJaXdnSWpVNUlpd2dJajhpTENBaU1EQTZNREE2\nTURBaUxDQWlZbWx2YzJWMElpd2dJall3Cklpd2dJajhpTENBaU1EQTZNREE2\nTURBaUxDQWlZbWx2YzJWMElpd2dJall4SWl3Z0lqOGlMQ0FpTURBNgpNREE2\nTURBaUxDQWlZbWx2YzJWMElpd2dJall5SWl3Z0lqOGlMQ0FpTURBNk1EQTZN\nREFpTENBaVltbHYKYzJWMElpd2dJall6SWl3Z0lqOGlMQ0FpTURBNk1EQTZN\nREFpTENBaVltbHZjMlYwSWl3Z0lqWTBJaXdnCklqOGlMQ0FpTURBNk1EQTZN\nREFpTENBaVltbHZjMlYwSWl3Z0lqWTFJaXdnSWo4aUxDQWlNREE2TURBNgpN\nREFpTENBaVltbHZjMlYwSWl3Z0lqWTJJaXdnSWo4aUxDQWlNREE2TURBNk1E\nQWlMQ0FpWW1sdmMyVjAKSWl3Z0lqWTNJaXdnSWo4aUxDQWlNREE2TURBNk1E\nQWlMQ0FpWW1sdmMyVjBJaXdnSWpZNElpd2dJajhpCkxDQWlNREE2TURBNk1E\nQWlMQ0FpWW1sdmMyVjBJaXdnSWpZNUlpd2dJajhpTENBaU1EQTZNREE2TURB\naQpMQ0FpWW1sdmMyVjBJaXdnSWpjd0lpd2dJajhpTENBaU1EQTZNREE2TURB\naUxDQWlZbWx2YzJWMElpd2cKSWpjeElpd2dJajhpTENBaU1EQTZNREE2TURB\naUxDQWlZbWx2YzJWMElpd2dJamN5SWl3Z0lqOGlMQ0FpCk1EQTZNREE2TURB\naUxDQWlZbWx2YzJWMElpd2dJamN6SWl3Z0lqOGlMQ0FpTURBNk1EQTZNREFp\nTENBaQpZbWx2YzJWMElpd2dJamMwSWl3Z0lqOGlMQ0FpTURBNk1EQTZNREFp\nTENBaVltbHZjMlYwSWl3Z0lqYzEKSWl3Z0lqOGlMQ0FpTURBNk1EQTZNREFp\nTENBaVltbHZjMlYwSWl3Z0lqYzJJaXdnSWo4aUxDQWlNREE2Ck1EQTZNREFp\nTENBaVltbHZjMlYwSWl3Z0lqYzNJaXdnSWo4aUxDQWlNREE2TURBNk1EQWlM\nQ0FpWW1sdgpjMlYwSWl3Z0lqYzRJaXdnSWo4aUxDQWlNREE2TURBNk1EQWlM\nQ0FpWW1sdmMyVjBJaXdnSWpjNUlpd2cKSWo4aUxDQWlNREE2TURBNk1EQWlM\nQ0FpWW1sdmMyVjBJaXdnSWpnd0lpd2dJajhpTENBaU1EQTZNREE2Ck1EQWlM\nQ0FpYzJOemFWOWxhRjh3SWl3Z0lqZ3hJaXdnSWo4aUxDQWlNREE2TURBNk1E\nQWlMQ0FpYzJOegphVjkwYldaZk1DSXNJQ0k0TWlJc0lDSS9JaXdnSWpBd09q\nQXdPakF3SWl3Z0luTmpjMmxmWldoZk1TSXMKSUNJNE15SXNJQ0kvSWl3Z0lq\nQXdPakF3T2pBd0lpd2dJbk5qYzJsZmRHMW1YekVpTENBaU9EVWlMQ0FpClB5\nSXNJQ0l3TURvd01Eb3dNQ0lzSUNKaWFXOXpaWFFpTENBaU9Ea2lMQ0FpUHlJ\nc0lDSXdNRG93TURvdwpNQ0lzSUNKcGNIWTJYMkZrWkhKamIyNW1JaXdnSWpF\nd015SXNJQ0kvSWl3Z0lqQXdPakF3T2pBd0lpd2cKSW1SbFptVnlkM0VpTENB\naU1qVTFJaXdnSWo4aUxDQWlNREE2TURBNk1EQWlMQ0FpY21GcFpEVjNjU0lz\nCklDSXlPREVpTENBaVB5SXNJQ0l3TURvd01Eb3dNQ0lzSUNKaWFXOXpaWFFp\nTENBaU16RXhJaXdnSWo4aQpMQ0FpTURBNk1EQTZNREFpTENBaWFtSmtNaTk0\nZG1SaE1TMDRJaXdnSWpNeE1pSXNJQ0kvSWl3Z0lqQXcKT2pBd09qQXdJaXdn\nSW1WNGREUXRjbk4yTFdOdmJuWmxjaUlzSUNJek56UWlMQ0FpUHlJc0lDSXdN\nRG93Ck1Eb3dNQ0lzSUNKcmQyOXlhMlZ5THpFNk1VZ2lMQ0FpTXprd0lpd2dJ\najhpTENBaU1EQTZNREE2TURBaQpMQ0FpYzNsemRHVnRaQzFxYjNWeWJtRnNJ\naXdnSWpRd01pSXNJQ0kvSWl3Z0lqQXdPakF3T2pBd0lpd2cKSW1selkzTnBY\nMlZvSWl3Z0lqUXdNeUlzSUNJL0lpd2dJakF3T2pBd09qQXdJaXdnSW10aGRX\nUnBkR1FpCkxDQWlOREEySWl3Z0lqOGlMQ0FpTURBNk1EQTZNREFpTENBaWFX\nSmZZV1JrY2lJc0lDSTBNRGNpTENBaQpQeUlzSUNJd01Eb3dNRG93TUNJc0lD\nSnBZbDl0WTJGemRDSXNJQ0kwTURnaUxDQWlQeUlzSUNJd01Eb3cKTURvd01D\nSXNJQ0pwWWw5dWJGOXpZVjkzY1NJc0lDSTBNVEFpTENBaVB5SXNJQ0l3TURv\nd01Eb3dNQ0lzCklDSnBZbDlqYlNJc0lDSTBNVEVpTENBaVB5SXNJQ0l3TURv\nd01Eb3dNQ0lzSUNKcmQyOXlhMlZ5THpBNgpNaUlzSUNJME1UVWlMQ0FpUHlJ\nc0lDSXdNRG93TURvd01DSXNJQ0pwZDE5amJWOTNjU0lzSUNJME1qRWkKTENB\naVB5SXNJQ0l3TURvd01Eb3dNQ0lzSUNKeVpHMWhYMk50SWl3Z0lqUXpOQ0lz\nSUNJL0lpd2dJakF3Ck9qQXdPakF3SWl3Z0lteDJiV1YwWVdRaUxDQWlORFl6\nSWl3Z0lqOGlMQ0FpTURBNk1EQTZNREFpTENBaQpjM2x6ZEdWdFpDMTFaR1Yy\nWkNJc0lDSTBOamNpTENBaVB5SXNJQ0l3TURvd01Eb3dNQ0lzSUNKcmQyOXkK\nYTJWeUx6RTZNeUlzSUNJMk56Y2lMQ0FpUHlJc0lDSXdNRG93TURvd01DSXNJ\nQ0p6ZVhOMFpXMWtMWFJwCmJXVnplVzRpTENBaU9EVXdJaXdnSWo4aUxDQWlN\nREE2TURBNk1EQWlMQ0FpYTNkdmNtdGxjaTh3T2pGSQpJaXdnSWpnMU1TSXNJ\nQ0kvSWl3Z0lqQXdPakF3T2pBd0lpd2dJbVJvWTJ4cFpXNTBJaXdnSWprNU15\nSXMKSUNJL0lpd2dJakF3T2pBd09qQXdJaXdnSW1Sb1kyeHBaVzUwSWl3Z0lq\nRXhNRFVpTENBaVB5SXNJQ0l3Ck1Eb3dNRG93TUNJc0lDSnBjMk56YVdRaUxD\nQWlNVEV3TmlJc0lDSS9JaXdnSWpBd09qQXdPakF3SWl3ZwpJbWx6WTNOcFpD\nSXNJQ0l4TVRBNElpd2dJajhpTENBaU1EQTZNREE2TURBaUxDQWlZV05qYjNW\ndWRITXQKWkdGbGJXOXVJaXdnSWpFeE1UTWlMQ0FpUHlJc0lDSXdNRG93TURv\nd01DSXNJQ0poWTNCcFpDSXNJQ0l4Ck1USXlJaXdnSWo4aUxDQWlNREE2TURB\nNk1EQWlMQ0FpWTNKdmJpSXNJQ0l4TVRJMElpd2dJajhpTENBaQpNREE2TURB\nNk1EQWlMQ0FpYkhoalpuTWlMQ0FpTVRFek5DSXNJQ0kvSWl3Z0lqQXdPakF3\nT2pBd0lpd2cKSW5KemVYTnNiMmRrSWl3Z0lqRXhNemtpTENBaVB5SXNJQ0l3\nTURvd01Eb3dNQ0lzSUNKa1luVnpMV1JoClpXMXZiaUlzSUNJeE1UVTFJaXdn\nSWo4aUxDQWlNREE2TURBNk1EQWlMQ0FpYzI1aGNHUWlMQ0FpTVRFMQpPQ0lz\nSUNJL0lpd2dJakF3T2pBd09qQXdJaXdnSW5OemFHUWlMQ0FpTVRFMk1pSXNJ\nQ0kvSWl3Z0lqQXcKT2pBd09qQXdJaXdnSW1GMFpDSXNJQ0l4TVRZMElpd2dJ\najhpTENBaU1EQTZNREE2TURBaUxDQWljM2x6CmRHVnRaQzFzYjJkcGJtUWlM\nQ0FpTVRFMk9DSXNJQ0kvSWl3Z0lqQXdPakF3T2pBd0lpd2dJbTE1YzNGcwpa\nQ0lzSUNJeE1UZ3dJaXdnSWo4aUxDQWlNREE2TURBNk1EQWlMQ0FpYldSaFpH\nMGlMQ0FpTVRFNE5TSXMKSUNJL0lpd2dJakF3T2pBd09qQXdJaXdnSW5CdmJH\ndHBkR1FpTENBaU1USTFNQ0lzSUNKMGRIa3hJaXdnCklqQXdPakF3T2pBd0lp\nd2dJbUZuWlhSMGVTSXNJQ0l4TWpVMUlpd2dJblIwZVZNd0lpd2dJakF3T2pB\ndwpPakF3SWl3Z0ltRm5aWFIwZVNJc0lDSXhNall3SWl3Z0lqOGlMQ0FpTURB\nNk1EQTZNREFpTENBaWFYSngKWW1Gc1lXNWpaU0lzSUNJeE16azRJaXdnSWo4\naUxDQWlNREE2TURBNk1EQWlMQ0FpYzNOb1pDSXNJQ0l4Ck5ERTFJaXdnSWo4\naUxDQWlNREE2TURBNk1EQWlMQ0FpYzNsemRHVnRaQ0lzSUNJeE5ERTNJaXdn\nSWo4aQpMQ0FpTURBNk1EQTZNREFpTENBaUtITmtMWEJoYlNraUxDQWlNVFEz\nTVNJc0lDSS9JaXdnSWpBd09qQXcKT2pBd0lpd2dJbk56YUdRaUxDQWlNVFEz\nTWlJc0lDSndkSE12TUNJc0lDSXdNRG93TURvd01DSXNJQ0ppCllYTm9JaXdn\nSWpFMk9UZ2lMQ0FpY0hSekx6QWlMQ0FpTURBNk1EQTZNREFpTENBaWNuVmll\nU0lzSUNJeApOelEzSWl3Z0luQjBjeTh3SWl3Z0lqQXdPakF3T2pBd0lpd2dJ\nbkJ6SWwwPQpQNuILd6G9//UdxFz4kZiM\n',
}
```

","","","",General,"",""
3572162,Report Device Agent version number,66680,1,7,2,"","GATE-420, GATE-455",23,1524154132,23,1524154919,"","",4674,0,The Device Agent shall report the Device Agent's version number with the Versions status reports feature so that the Device Agent version is known and displayed by the Device Manager.,"1. There should be a device type in DM with a device field called 'agent_version', also there should be a device attached to this device type.
2. Configure the DA to post (at least) a version status report to IO, this must be done by editing the `config/agent_config.yml` file.
3. The `agent_config.yml` file should be pointing to the above described device, by setting its `uid` at the top.
4. An instance of middleman should be running, picking up device field values from IO and sending to DM. Make sure the IPs are correct.","1. Run `cd DA`
4. Verify that the 'ruby agent.rb -v' runs without any errors.
","5. Verify that the DM receives the agent version number (0.1.5 currently). This can be checked in DM's Web UI or via API.
6. Verify that the sample function outputs the agent version number by running 'ruby agent.rb -s'","","","",General,"",""
3679135,Report the version of InTouch Imaging,66680,1,7,2,"","GATE-398, GATE-566",23,1530039702,9,1530044018,"","",4674,0,"","You should create a new device in DM devops, with the device type **InTouch Imaging**","1. Install Device Agent on new eUnity server, and make it point to the previously created device.",Confirm that DA sends the `eunity_version` located in `/home/ubuntu/versions.yml` to Device Manager field value for `imaging_version`.,"","","",General,"",""
3542191,As the Device Manager I want to consume Device related data published to the message bus,79248,1,7,2,"","GATE-116, GATE-127",23,1522784202,9,1523560465,"","",4674,0,"There is a middleman ruby script that runs in a container.
The script periodically consumes messages from the messages bus and sends them to the GM metrics API.
Configurable values include:

- MM_ENV
- RUN_TS_TO_GM
- RUN_GM_TO_TS
- TS_CLIENT_ID
- TS_CLIENT_SECRET
- TS_ACCOUNT
- GM_API_KEY_ID
- GM_API_SECRET_KEY
- TS_TO_GM_SLEEP_TIME
- TS_FETCH_TOPIC
- GM_SEND_PATH
- GM_SEND_HEADERS
- GM_TO_TS_SLEEP_TIME
- TS_SEND_TOPICS
- GM_FETCH_PATH
- GM_FETCH_HEADERS

See: https://intouchhealth.atlassian.net/browse/MBR-12","Use DA to post device field value and/or metrics to a topic:

- Add the following contents to a new file called `GA/config/agent_config.yml`

```
    device_uid: '546cb89a0'
    
    turnstyle_credentials:
      url:  'http://52.53.57.97:3000/client_api/v1/messages'
      client_id: abc123
      client_secret: abc123
      account: qa
    
    status_reports:
      - status_report_basic:
          frequency: 3
          ts_topic: 'device_metrics'
      - status_report_os:
          frequency: 3
          ts_topic: 'device_fields'
      - status_report_packages:
          frequency: 3
          ts_topic: 'device_metrics'
      - status_report_processes:
          frequency: 3
          ts_topic: 'device_metrics'
```

- Install the agent 

`cd DA/`
`bash bin/install.sh`

- Run the agent in verbose mode.

`ruby agent.rb -v`

- Verify that the 4 status report types (basic, os, packages, processes) get posted to Turnstyle without errors.
- Configure GM:

- Add a new device type (e.g. 'PACS Viewer')
- Add the following metric fields to the device type:
||cpu_usage|metric|float
||memory_usage|metric|float
||memory_total|device|float
||processes|metric|text
||storage_usage|metric|float
||storage_total|device|float
||network|device|text
||ip_address|device|string
||mac_address|device|string
||os_version|device|string
||vm_info|device|text
||last_os_patch_time|device|datetime
||hardware_info|device|text
||cpu_cores|device|integer
- Add a new device with that device type and with device_uid: '546cb89a0'


","- Use DA to post device field value and/or metrics to a topic.
- Add the following environment variables to your ~/.bashrc file. Change values as necessary for intervals, topics, and credentials. Keep environment as development. Afterward, remember to source your ~/.bashrc or launch a new terminal.



    export MM_ENV='development'
    export RUN_TS_TO_GM='true'
    export RUN_GM_TO_TS='false'
    export TS_CLIENT_ID='abc123'
    export TS_CLIENT_SECRET='abc123'
    export TS_ACCOUNT='ith'
    export GM_API_KEY_ID='91W9Fjlvos4Z-jZ-ZU1VNMwumgqzGg'
    export GM_API_SECRET_KEY='ipYCx1z2I-OJgzRhKRYKpJZ_2xRUEA'
    export TS_TO_GM_SLEEP_TIME='3'
    export TS_FETCH_TOPIC='device_metrics'
    export GM_SEND_PATH='/api/v1/metrics'
    export GM_SEND_HEADERS='Content-Type:application/json'
    export GM_TO_TS_SLEEP_TIME='NA'
    export TS_SEND_TOPICS='NA'
    export GM_FETCH_PATH='NA'
    export GM_FETCH_HEADERS='NA'



- Download the middleman code and install Docker using the included script

`./install_docker.sh`

- Verify that you can connect to IO by sending an API call to https://io-devops.intouchstaging.com with curl or postman.
- Start GM on localhost:3003
- Build the Docker image - this will output an image ID

`cd middleman/`
`sudo docker build .`

- Run the container from the newly built image.

`./docker_run.sh <image_id>`

- Check the GM server logs to make sure that the metrics API is being called every AAT_REPORTS_INTERVAL seconds.
- Log into GM rails console and verify that metric values were posted.

`MetricFieldValue.count`
`MetricFieldValue.all`

- Get the container ID

`sudo docker container ls`

- Log into the container

`sudo docker exec -it <container_id> bash`

- Tail the middleman logs inside the container

`tail -f log/development.log`
","- Reports should be sent with no errors.
- Configured device metrics and values should populate in DM.","","","",General,"",favicon
3682178,"Fetch scripts, run them, and report their status",79248,1,7,2,"","GATE-536, GATE-597",23,1533152519,23,1533153542,"","",4674,0,"Once DM has the scripts API, DA should periodically check to see if there are scripts it should run.

DM device creds should be created for a device when installing with the gateway-server-build 'install_da_and_gateway_security' script. These creds will then be used when DA is checking for scripts to run.

Because reports and script runs are separate entities, DA should treat them as such individual. DA will run two threads, one for reports and one for scripts, with each thread having a sleep time defined by their respective actions.","1. Install DA on a new device, point it to a device uid created in DM.

2. Create device credentials for that device in DM and place it in DA config file.","1. Create a Script in DM, a simple `ls` will do.
2. Create a run for it and assign it to the previously mentioned device.
3. Wait for 2 minutes and refresh the page.","The state of the script should change from 'Created' to 'Succeeded'

If you open the run details you should see values for STDOUT and STDERR, in this case only STDOUT will have data since the script succeeded.
","","","",General,"",favicon
